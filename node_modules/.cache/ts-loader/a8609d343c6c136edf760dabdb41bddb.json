{"remainingRequest":"/home/nebojsa/projects/factory-academy-ts/node_modules/babel-loader/lib/index.js!/home/nebojsa/projects/factory-academy-ts/node_modules/ts-loader/index.js??ref--13-2!/home/nebojsa/projects/factory-academy-ts/src/store/modules/person/personModule.ts","dependencies":[{"path":"/home/nebojsa/projects/factory-academy-ts/src/store/modules/person/personModule.ts","mtime":1626258804869},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/nebojsa/projects/factory-academy-ts/src/store/modules/person/personModule.ts"],"names":[],"mappings":"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","sourcesContent":["import { Module, VuexModule, Mutation, Action, getModule } from 'vuex-module-decorators'\nimport store from '@/store'\nimport { personService } from './person.service'\n\n@Module({ namespaced: true, name: 'personModule', dynamic: true, store })\nclass PersonModule extends VuexModule {\n\n\tpublic myCourses: {} | null = null;\n    public profileData: {} | null = null;\n    public completedCourses: [] | {} | null = null;\n    public myStudents: [] | {} | null = null;\n\n\t// getters\n    get getMyCourses() {\n        return this.myCourses;\n    }\n\t// END :: getters\n\n\t// mutations\n    @Mutation\n    public setProfileData(profileData: {}) {\n        this.profileData = profileData;\n    }\n\n    @Mutation\n    public parseMyCourses(myCourses: [] | any): void {\n        if(!myCourses) {\n            return;\n        }\n        myCourses.forEach((course: {}, i: number) => {\n            myCourses[i] = {\n                id: myCourses[i].id,\n                name: myCourses[i].name,\n                average_mark: myCourses[i].average_mark,\n                price: myCourses[i].price\n            }\n        })\n        this.myCourses = myCourses;\n    }\n\n    @Mutation\n    parseMyStudents(myStudents: [] | any): void {\n        if(!myStudents) {\n            return;\n        }\n        myStudents.forEach((student: {}, i: number) => {\n            myStudents[i] = {\n                user_id: myStudents[i].user_id,\n                user: myStudents[i].user,\n                course_name: myStudents[i].course_name,\n                course_start_date: myStudents[i].course_start_date\n            }\n        })\n        this.myStudents = myStudents;\n    }\n\n    @Mutation\n    public parseCompletedCourses(completedCourses: [] | any): void {\n        if(!completedCourses) {\n            return;\n        }\n        completedCourses.forEach((course: {}, i: number) => {\n            completedCourses[i] = {\n                course_id: completedCourses[i].course.id,\n                course_name: completedCourses[i].course.name,\n                mark: completedCourses[i].mark,\n            }\n        })\n        this.completedCourses = completedCourses;\n    }\n\t// END :: mutation\n\n\t// actions\n    @Action({ rawError: true })\n    async fetchMyCourses(payload: any) {\n        try {\n            const res = await personService.fetchMyCourses(payload);\n            this.parseMyCourses(res.data);\n            return Promise.resolve(res);\n        } catch(error) {\n            return Promise.reject(error);\n        }\n    }\n\n    @Action({ rawError: true })\n    async goProfile(payload: number) {\n        try {\n            const res = await personService.goProfile(payload);\n            this.setProfileData(res.data);\n            return Promise.resolve(res);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n\n    @Action({ rawError: true })\n    async fetchMyStudents() {\n        try {\n            const res = await personService.fetchMyStudents();\n            //commit('parseMyStudents', res.data);\n            return Promise.resolve(res);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n\n    // @Action({ rawError: true })\n    // async fetchNotCompletedCourses() {\n    //     try {\n    //         const res = await personService.fetchNotCompletedCourses();\n    //         commit('parsenotCompletedCourses', res.data)\n    //         return Promise.resolve(res);\n    //     } catch (error) {\n    //         return Promise.reject(error);\n    //     }\n    // }\n\n    @Action({ rawError: true })\n    async fetchCompletedCourses(id: number) {\n        try {\n            const res = await personService.fetchCompletedCourses(id);\n            this.parseCompletedCourses(res.data);\n            return Promise.resolve(res);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n\t// END :: actions\n}\nexport default getModule(PersonModule)"],"sourceRoot":""}]}