{"remainingRequest":"/home/nebojsa/projects/factory-academy-ts/node_modules/babel-loader/lib/index.js!/home/nebojsa/projects/factory-academy-ts/node_modules/ts-loader/index.js??ref--13-2!/home/nebojsa/projects/factory-academy-ts/src/store/modules/person/personModule.ts","dependencies":[{"path":"/home/nebojsa/projects/factory-academy-ts/src/store/modules/person/personModule.ts","mtime":1626250540879},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/nebojsa/projects/factory-academy-ts/src/store/modules/person/personModule.ts"],"names":[],"mappings":"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","sourcesContent":["import { Module, VuexModule, Mutation, Action, getModule } from 'vuex-module-decorators'\nimport store from '@/store'\nimport { personService } from './person.service'\n\n@Module({ namespaced: true, name: 'personModule', dynamic: true, store })\nclass PersonModule extends VuexModule {\n\n\tpublic myCourses: {} | null = null;\n    public profileData: {} | null = null;\n    public completedCourses: [] | {} | null = null;\n\n\t// getters\n    get getMyCourses() {\n        return this.myCourses;\n    }\n\t// END :: getters\n\n\t// mutations\n    @Mutation\n    public setProfileData(profileData: {}) {\n        this.profileData = profileData;\n    }\n\n    @Mutation\n    public parseMyCourses(myCourses: [] | any): void {\n        if(!myCourses) {\n            return;\n        }\n        myCourses.forEach((course: {}, i: number) => {\n            myCourses[i] = {\n                id: myCourses[i].id,\n                name: myCourses[i].name,\n                average_mark: myCourses[i].average_mark,\n                price: myCourses[i].price\n            }\n        })\n        this.myCourses = myCourses;\n    }\n\n    @Mutation\n    public parseCompletedCourses(completedCourses: [] | any): void {\n        if(!completedCourses) {\n            return;\n        }\n        completedCourses.forEach((course: {}, i: number) => {\n            completedCourses[i] = {\n                course_id: completedCourses[i].course.id,\n                course_name: completedCourses[i].course.name,\n                mark: completedCourses[i].mark,\n            }\n        })\n        this.completedCourses = completedCourses;\n    }\n\t// END :: mutation\n\n\t// actions\n    @Action({ rawError: true })\n    async fetchMyCourses(payload: any) {\n        try {\n            const res = await personService.fetchMyCourses(payload);\n            this.parseMyCourses(res.data);\n            return Promise.resolve(res);\n        } catch(error) {\n            return Promise.reject(error);\n        }\n    }\n\n    @Action({ rawError: true })\n    async goProfile(payload: number) {\n        try {\n            const res = await personService.goProfile(payload);\n            this.setProfileData(res.data);\n            return Promise.resolve(res);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n\n    // @Action({ rawError: true })\n    // async fetchNotCompletedCourses() {\n    //     try {\n    //         const res = await personService.fetchNotCompletedCourses();\n    //         commit('parsenotCompletedCourses', res.data)\n    //         return Promise.resolve(res);\n    //     } catch (error) {\n    //         return Promise.reject(error);\n    //     }\n    // }\n\n    @Action({ rawError: true })\n    async fetchCompletedCourses(id: number) {\n        try {\n            const res = await personService.fetchCompletedCourses(id);\n            this.parseCompletedCourses(res.data);\n            return Promise.resolve(res);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n\t// END :: actions\n}\nexport default getModule(PersonModule)"],"sourceRoot":""}]}