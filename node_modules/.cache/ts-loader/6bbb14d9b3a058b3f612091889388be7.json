{"remainingRequest":"/home/nebojsa/projects/factory-academy-ts/node_modules/babel-loader/lib/index.js!/home/nebojsa/projects/factory-academy-ts/node_modules/ts-loader/index.js??ref--13-2!/home/nebojsa/projects/factory-academy-ts/src/services/BaseService.ts","dependencies":[{"path":"/home/nebojsa/projects/factory-academy-ts/src/services/BaseService.ts","mtime":1626436477959},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/nebojsa/projects/factory-academy-ts/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgRVJST1JfQ09ERVMsIFNVQ0NFU1NfQ09ERVMgfSBmcm9tICdAL2NvbnN0YW50cy9tZXNzYWdlcyc7CmV4cG9ydCB2YXIgbm90aWZpY2F0aW9uTXNnID0gZnVuY3Rpb24gbm90aWZpY2F0aW9uTXNnKHJlc3BvbnNlLCBjb2RlS2V5KSB7CiAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICBpZiAoIWNvZGVLZXkpIHsKICAgICAgcmV0dXJuICdTdWNjZXNzISc7CiAgICB9CgogICAgcmV0dXJuIFNVQ0NFU1NfQ09ERVNbY29kZUtleV07CiAgfQoKICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2UucmVzcG9uc2UgJiYgcmVzcG9uc2UucmVzcG9uc2UuZGF0YS5lcnJvcnMpIHsKICAgIHJldHVybiBFUlJPUl9DT0RFU1tyZXNwb25zZS5yZXNwb25zZS5kYXRhLmVycm9yc107CiAgfSBlbHNlIHsKICAgIHJldHVybiAiU29tZXRoaW5nJ3MgV3JvbmchIjsKICB9Cn07"},{"version":3,"sources":["/home/nebojsa/projects/factory-academy-ts/src/services/BaseService.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,EAAsB,aAAtB,QAA2C,sBAA3C;AAEA,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,QAAD,EAAgB,OAAhB,EAAgC;AAC3D,MAAI,QAAQ,IAAI,QAAQ,CAAC,MAAT,KAAoB,GAApC,EAAyC;AACrC,QAAI,CAAC,OAAL,EAAc;AACV,aAAO,UAAP;AACH;;AACD,WAAO,aAAa,CAAC,OAAD,CAApB;AACH;;AACD,MAAG,QAAQ,IAAI,QAAQ,CAAC,QAArB,IAAiC,QAAQ,CAAC,QAAT,CAAkB,IAAlB,CAAuB,MAA3D,EAAmE;AAC/D,WAAO,WAAW,CAAC,QAAQ,CAAC,QAAT,CAAkB,IAAlB,CAAuB,MAAxB,CAAlB;AACH,GAFD,MAEO;AACH,WAAO,oBAAP;AACH;AACJ,CAZM","sourcesContent":["import { ERROR_CODES, SUCCESS_CODES } from '@/constants/messages'\n\nexport const notificationMsg = (response: any, codeKey: any) => {\n    if (response && response.status === 200) {\n        if (!codeKey) {\n            return 'Success!'\n        }\n        return SUCCESS_CODES[codeKey];\n    }\n    if(response && response.response && response.response.data.errors) {\n        return ERROR_CODES[response.response.data.errors]\n    } else {\n        return \"Something's Wrong!\";\n    }\n};"],"sourceRoot":""}]}